import{aO as c,aD as t}from"./index-eLyz9_Ts.js";const o=c("graphic",{state:()=>({designers:[]}),getters:{getDesignerList:r=>r.designers},actions:{async fetchRequestGraphics(r){try{return await t().request.graphic.findAll(r)}catch(e){console.error(e)}},async fetchRequestGraphic(r){try{return await t().request.graphic.findOne(r)}catch(e){console.error(e)}},async createRequestGraphic(r){try{return await t().request.graphic.create(r)}catch(e){console.error(e)}},async updateRequestGraphic(r,e){try{return await t().request.graphic.update(r,e)}catch(s){console.error(s)}},async deleteRequestGraphic(r){try{return await t().request.graphic.delete(r)}catch(e){console.error(e)}},async fetchGraphicDesigners(){try{const e=await t().request.graphicDesigner.findAll();return this.designers=e.data,e}catch(r){console.error(r)}},async createGraphicDesigner(r){try{return await t().request.graphicDesigner.create(r)}catch(e){console.error(e)}},async deleteGraphicDesigner(r){try{return await t().request.graphicDesigner.delete(r)}catch(e){console.error(e)}},async updateRequestGraphicStatus(r,e){try{return await t().request.graphic.updateRequest(r,e)}catch(s){console.error(s)}},async createRequestGraphicComplement(r,e){try{return await t().request.graphic.createComplement(r,e)}catch(s){console.error(s)}},async fetchCommentList(r){try{return await t().request.graphicComment.find(r)}catch(e){console.error(e)}},async fetchAttachmentFile(r){try{return await t().request.graphic.findAttachmentFile(r)}catch(e){console.error(e)}},async uploadAttachmentFile(r,e){try{return await t().request.graphic.uploadAttachmentFile(r,e)}catch(s){console.error(s)}}}});export{o as u};
